name: CI/CD Pipeline with Docker and Playwright

on:
  push:
    branches:
      - main  # Ejecutar en push hacia la rama main
  pull_request:
    branches:
      - main  # Ejecutar en pull request hacia la rama main

jobs:
  build:
    runs-on: ubuntu-latest  # Usar una máquina con Ubuntu para ejecutar el pipeline

    steps:
      # Paso 1: Hacer checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker y Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose  # Instalar Docker Compose

      # Paso 3: Ejecutar pruebas en contenedor Docker
      - name: Run tests with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --abort-on-container-exit --exit-code-from playwright-test

      # Paso 4: Extraer los informes de Allure después de que el contenedor termine
      - name: Copy Allure reports from volume
        run: |
          docker cp playwright-container:/app/allure-report ./allure-report
          docker cp playwright-container:/app/allure-results ./allure-results


      # Paso 5: Limpiar los contenedores Docker
      - name: Clean up Docker containers
        run: |
          docker-compose -f docker-compose.yml down --volumes --remove-orphans

      # Paso 6: Publicar el informe de Allure
      - name: Publish Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report


  # Nuevo job para publicar el informe en GitHub Pages.
  deploy:
    runs-on: ubuntu-latest  # Usar Ubuntu
    needs: build

    steps:
    # Paso 1: Checkout del código
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Subir los informes de Allure a GitHub Pages
    - name: Set up GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_dir: ./allure-report  # Carpeta con el informe de Allure
        publish_branch: gh-pages  # Publicar en la rama gh-pages
        github_token: ${{ secrets.GH_TOKEN }}  # Usar el token de GitHub para autenticación

    # Paso 3: Configurar git y realizar commit y push a la rama gh-pages
    - name: Push Allure Report to GitHub Pages
      run: |
        git config --global user.email "youremail@example.com"
        git config --global user.name "Your Name"
        git add -A
        git commit -m "Publish Allure Report"
        git push origin gh-pages  # Hacer push a la rama gh-pages